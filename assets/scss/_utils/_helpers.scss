
// /*  

// Harry Roberts says:

// "Only use @extend when the rulesets that you are trying 
// to DRY out are inherently and thematically related."

// - http://csswizardry.com/2014/11/when-to-use-extend-when-to-use-a-mixin/
// - http://www.sitepoint.com/avoid-sass-extend/

// These are mixins because they are "helpers" and not used
// in a thematically related fashion.

// There are a few classes printed here as well as mixins.
// Those are primarily for prototyping purposes, but not
// exclusively.

// */


// // ----
// // Formatting
// // ----

// @mixin center-block() {
//     margin: 0 auto;
//     display: block;
// }

// .clearfix {
//     @include clearfix;
// }





// // ----
// // Typography
// // ----


.special {
	color: $color-accent-med;
}



// // ----
// // Visual Design
// // ----


// // Change background and text color.

// @mixin rotate($text: $text-light, $bkgd: $text-dark) {
//     background-color: $bkgd;
//     color: $text;
// }

// .rotate {

// 	&-dark {
// 		@include rotate($text-light, $text-dark);
// 	}

// 	&-med {
// 		@include rotate($text-light, $accent-med);
// 	}

// 	&-light {
// 		@include rotate($text-light, $accent-light);	
// 	}

// 	&-vlight {
// 		@include rotate($text-light, $accent-vlight);	
// 	}

// 	&-info {
// 		@include rotate($text-light, $alert-info);
// 	}
// }

// .rotate {
// 	@include rotate($text-light, $text-dark);
// }

// .special,
// a.special {
// 	color: $accent-light;
// }



// // ----
// // Content
// // ----


// %img_highlight {
//     border: $accent-border;
// }


// // Alerts

// %alert,
// .alert {
//     @include rotate($text-dark, $accent-vlight);
//     padding: $size-base;
// }








// // ----
// // Lists
// // ----

// @mixin unstyle-list() {
//     list-style: none;
//     padding-left: 0;
// }

// %unstyle-list {
//     list-style: none;
// }

// @mixin horizontal-list() {
//     ul {
//         list-style-type: none;

//       &>li {
//             display: inline-block;    
//         }
//     }
// }

// %horizontal-list-center {
//     text-align: center;
//     @include horizontal-list;
// }





// // Hold

// @mixin form-base($pad-tb, $pad-rl, $font) {
//     padding: $pad-tb $pad-rl;
//     font-family: $font;
// }

// %form-base {
//     @include form-base($sml/3, $sml/2, $form-font);
// }

// .hide-after-lg {
//     @include bp(large) {
//         display: none; 
//     }
// }

// // Ew!
// .hide-until-md, 
// %hide-until-md {
//    	display: none !important;
//     @include bp(med) {
//         display: inline-block !important; 
//     }   
// }

// .hide-after-md, 
// %hide-after-md {
// 	@include bp(med) {
//         display: none !important;
//     }
// }

// %rotate {
// 	color: $rotate-text;
// 	background-color: $rotate-bkgd;
// }


// // Typography helpers

// .meta,
// %meta {
//     @include meta;
// }

//     %meta-light {
//         @include meta;
//         color: $text-med;
//     }

//     %meta-dark {
//         @include meta;
//         color: $text-med;
//     }


// // This can be used to add a border around a title, like this:

// //  <div class="decor-wrap">
// //      <h4 class="decor"><span>{{blck.list_title}}</span></h4>  
// //  </div>

// // .decor {
// //     @include meta;
// //     border-bottom: $accent-border; 
// //     position:relative; 
    
// //     span { 
// //         position: relative; 
// //         top: $sml/1.5; 
// //         padding: 0 $sml 0 0;
// //         background-color: $body-bkgd;
// //     }
// // }

// // .decor-wrap{
// //     display: block; 
// //     margin: 0;
// //     @include clearfix;
// // }


// // Interactive (bad description?)
// // If you'd like a sticky nav...
//     .stuck {
//         @include bp(med) {
//             position: fixed;
//             top: 0;
//             width: 100%;
//             z-index: $ztop;
//         }
//     }